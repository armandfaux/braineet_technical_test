{"ast":null,"code":"const sources = [\"https://swapi.co/api/people/1\", \"https://swapi.co/api/people/1\", \"https://swapi.co/api/people/2\", \"https://swapi.co/api/people/3\", \"https://swapi.co/api/people/4\"];\nexport const data = async () => {\n  try {\n    const response = await Promise.all(sources.map(url => fetch(url).then(res => res.json())));\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log('Error', error);\n  }\n};","map":{"version":3,"names":["sources","data","response","Promise","all","map","url","fetch","then","res","json","console","log","error"],"sources":["/home/armand/Braineet/braineet_tech_test/src/assets/api.js"],"sourcesContent":["const sources = [\n    \"https://swapi.co/api/people/1\",\n    \"https://swapi.co/api/people/1\",\n    \"https://swapi.co/api/people/2\",\n    \"https://swapi.co/api/people/3\",\n    \"https://swapi.co/api/people/4\",\n]\n\nexport const data = async () => {\n    try {\n        const response = await Promise.all(\n            sources.map(url => fetch(url).then(res => res.json()))\n        );\n        console.log(response);\n        return response;\n    } catch (error) {\n        console.log('Error', error);\n    }\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CACZ,+BADY,EAEZ,+BAFY,EAGZ,+BAHY,EAIZ,+BAJY,EAKZ,+BALY,CAAhB;AAQA,OAAO,MAAMC,IAAI,GAAG,YAAY;EAC5B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CACnBJ,OAAO,CAACK,GAAR,CAAYC,GAAG,IAAIC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvB,CAAnB,CADmB,CAAvB;IAGAC,OAAO,CAACC,GAAR,CAAYV,QAAZ;IACA,OAAOA,QAAP;EACH,CAND,CAME,OAAOW,KAAP,EAAc;IACZF,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;EACH;AACJ,CAVM"},"metadata":{},"sourceType":"module"}